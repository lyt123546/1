#include<iostream>
#include<deque>
#include<stack>
#include<string>
#include<math.h>
#include<stdlib.h>
using namespace std;
const int MAX = 10000;
class hunhe      //混合计算类
{
public:
 deque<char> a1;       // 盛放中缀表达式
 stack<char> a2;        // 盛放运算符号
 deque<char> a3;       // 盛放后缀表达式
 stack<int> a4;         // 计算后缀表达式
 void fenpei(deque<char>&a1,stack<char>&a2,deque<char>&a3);
 void jisuan(deque<char>&a3,stack<int>&a4);
 void check(char c,stack<char>&a2,deque<char>&a3);
 int youxian(char c);
 bool kuohao(char c);
 void print()
 {
	 cin>>str;
	 for(int i=0;i!=str.size();++i)
 {
 a1.push_back(str[i]);      // 逐一加入每个字符
 }
 fenpei(a1,a2,a3);         // 从a1中取出元素，分配元素到a2 和 a3 中
 jisuan(a3,a4);            // 计算后缀表达式
 }
private:
string str;
};
class sanjiao     // 三角函数类
{
private:
 double number;// 要操作的数
 char ch2;     // 选择控制的数
public:
 void print1();
 void set1(double num)// 传值给操作函数
 {
     number=num;
}
};
void sanjiao::print1()
{ // 三角函数的菜单
    char b;
    back2:
 cout<<"-----------------------------------------"<<endl;
 cout<<"请输入一个弧度数（数）： "<<endl;
 cin>>number;
 set1(number);
 cout<<"1. 求 sin(a)"<<endl;
 cout<<"2. 求 cos(a)"<<endl;
 cout<<"3. 求 tan(a)"<<endl;
 cout<<"4. 求 asin(a)"<<endl;
 cout<<"5. 求 acos(a)"<<endl;
 cout<<"6. 求 atan(a)"<<endl;
 cout<<" 请选择功能序号： "<<"";
 cin>>ch2;
 back3:
if(ch2=='1')
{
 cout<<"sin("<<number<<")="<<sin(number)<<endl;
 cout<<"-----------------------------------------"<<endl;
}
 else if(ch2=='2')
 {
 cout<<"cos("<<number<<")="<<cos(number)<<endl;
 cout<<"-----------------------------------------"<<endl;
 }
 else if(ch2=='3')
 {
 cout<<"tan("<<number<<")="<<tan(number)<<endl;
 cout<<"-----------------------------------------"<<endl;
 }
else if(ch2=='4')
{
 cout<<"asin("<<number<<")="<<asin(number)<<endl;
 cout<<"-----------------------------------------"<<endl;
}
 else if(ch2=='5')
 {
 cout<<"acos("<<number<<")="<<acos(number)<<endl;
 cout<<"-----------------------------------------"<<endl;
 }
 else if(ch2=='6')
 {
 cout<<"atan("<<number<<")="<<atan(number)<<endl;
 cout<<"-----------------------------------------"<<endl;
 }
 else
 {
 cout<<"输入有误！请重新选择： "<<endl;
 cin>>ch2;
 goto back3;
 }
cout<<"输入'r'返回主菜单，输入'c'继续运算"<<endl;
cin>>b;
if(b=='c')
{
 goto back2;
}
}
class jinzhi       // 进制转换类
{            
private:
 char str2[10];     // 存储二进制
 char str8[10];     //存储八进制
 char str16[10];    // 存储十六进制
 char ch2;        // 选择控制
 int number;      // 要转换的数
public:
 void print2();
 void set2(double num)
 { number=num;}
 void All(int number);      // 全部转换
 char sixteen(int number);   // 转换为十六进制
 char eight(int number);     // 转换为八进制
 char two(int number);      // 转换为二进制
};
void jinzhi::print2()
{
    char b;
    back5:
 cout<<"-----------------------------------------"<<endl;
 cout<<"请输入一个十进制数： "<<endl;
 cin>>number;
 set2( number);
 cout<<"1. 十进制转换为二进制  "<<endl;
 cout<<"2. 十进制转换为八进制  "<<endl;
 cout<<"3. 十进制转换为十六进制  "<<endl;
 cout<<"4. 十进制转换为二、八、十六进制  "<<endl;
 cout<<"请选择相应的功能:"<<"";
 cin>>ch2;
back4:
if(ch2=='1')
{//1. 十进制转换为二进制
 cout<<number<<"转换为二进制： "<<two(number)<<endl;
 cout<<"-----------------------------------------"<<endl;
}
else if(ch2=='2')
{// 十进制转换为八进制
 cout<<number<<"转换为八进制： "<<eight(number)<<endl;
 cout<<"-----------------------------------------"<<endl;
}
else if(ch2=='3')
{// 十进制转换为十六进制
 cout<<number<<"转换为十六进制： "<<sixteen(number)<<endl;
 cout<<"-----------------------------------------"<<endl;
}
else if(ch2=='4')// 十进制转换为二、八、十六进制
 {
 cout<<"输入有误！请重新选择： "<<endl;
 cin>>ch2;// 重新选择
 goto back4;// 重新转换
 }
 cout<<"输入'r'返回主菜单，输入'c'继续运算"<<endl;
cin>>b;
if(b=='c')
{
 goto back5;
}
}
char jinzhi::two(int number)
{
 itoa(number, str2, 2);
 return *str2;
}
char jinzhi::eight(int number)
{
 itoa(number, str8, 8);
 return *str8;
}
char jinzhi::sixteen(int number)
{
 itoa(number, str16, 16);
 return *str16;
}
void jinzhi::All(int number)
{
 itoa(number, str2, 2);
 itoa(number, str8, 8);
 itoa(number, str16, 16);
 cout<<"-----------------------------------------"<<endl;
 cout<<"转换为二进制： "<<str2<<endl;
 cout<<"转换为八进制： "<<str8<<endl;
 cout<<"转换为十六进制： "<<str16<<endl;
 cout<<"-----------------------------------------"<<endl;
}
bool hunhe::kuohao(char c)           // 判断是否为括号
 { 
 if(c=='('||c==')')
 return true;
 else return false;
}
int hunhe::youxian(char c)            // 获得符号的优先级
 {
 switch(c)
 {
 case '+':
 case '-':
 return 0; // 如果是加减，返回 0
 break;
 case '*':
 case '/':
 return 1; // 如果是乘除，返回 1
 case '^':
 case 's':
 return 2;
 break;
 case '(':
 case ')':
 return -1;    
 break;
 }
}
void hunhe::check(char c,stack<char>&a2,deque<char>&a3)  //判断符号的优先级
 { 
 if(a2.empty())
 {
 a2.push(c);
 return;
 }
 if(kuohao(c))
 {
 if(c=='(')a2.push(c);
 else
 {
 while(a2.top()!='(') {           // 所有元素直到遇到左括号
 char ch =a2.top();
 a3.push_back(ch);
 a2.pop();
 }
 a2.pop();                   //当遇到左括号时，弹出但不加入a3
 }
 }
 else                        // 如果不是括号
 { 
 char sym =a2.top();          // 取出顶端元素，与当前符号进行优先性比较
 if(youxian(c)<=youxian(sym))
 { 
 a2.pop();           // 如果 c 的优先性比栈顶符号小或等于，弹出栈顶元素
 a3.push_back(sym); 
 check(c,a2,a3);  // 调用check, 比较当前符号 c 与下一个顶端符号的优先性
 }
 else
 {
 a2.push(c);           // 如果 c 比顶端符号优先级大，那将 c 输入a2
 }
 }
}
void hunhe::fenpei(deque<char>&a1,stack<char>&a2,deque<char>&a3)
 {
 while(!a1.empty())
 {
 char c =a1.front();
 a1.pop_front();
 if((c>='0')&&(c<='9'))
 {
 a3.push_back(c);
 }
 else check(c,a2,a3);       // 调用 check 函数，针对不同情况作出不同操作
 }
 while(!a2.empty()) {       // 如果输入结束，将a2的元素全部输出，加入后缀表达式中
 char c =a2.top();
 a3.push_back(c);
 a2.pop();
 }
}
void hunhe::jisuan(deque<char>&a3,stack<int>&a4)
 {
 while(!a3.empty())
 {
 char c=a3.front();
 a3.pop_front();
 if((c>='0')&&(c<='9'))
 {               // 如果是操作数，写入结构体
 int op = c-'0';    // 减去 '0' 的asc码得到真实的数值
 a4.push(op);
 }
 else
 {               // 如果是操作符，从结构体中输出元素进行计算
 double op1 =a4.top();
 a4.pop();
 double op2 =a4.top();
 a4.pop();
 switch(c)
 {
 case '+':
 a4.push(op2+op1);
 break;
 case '-':
 a4.push(op2-op1);
 break;
 case '*':
 a4.push(op2*op1);
 break;
 case '/':
 a4.push(op2/op1);
 break;
 case '^':
 a4.push(pow(op2,op1));
 break;
 }
 }
 }
}
int main()
{
 int num1=0,num2=0,number=0,a;
 char b;
 sanjiao tri;// 三角函数对象
 jinzhi hex;// 进制转换对象
 hunhe hun;
 string str;
 cout<<"********************欢迎使用本计算器***********************"<<endl;
 for(;;)
 {
 cout<<"请选择运算模式:"<<endl;
 cout<<"1.混合运算(支持+,-,*,/,^(乘方))"<<endl<<"2.三角函数运算"<<endl<<"3.进制转换运算"<<endl;
 cin>>a;
 if(a==1)
 {
	 for(;;)
	 {
 cout<<"-----------------------------------------"<<endl;
 cout<<"请输入表达式，按 enter 结束： "<<endl;
 hun.print();
 cout<<"计算结果为 :"<<hun.a4.top()<<endl;
 cout<<"-----------------------------------------"<<endl;
 cout<<"输入'r'返回主菜单，输入'c'继续运算"<<endl;
 cin>>b;
 if(b=='r')
 {
	 break;
 }
	 }
 }
 else if(a==2)
 {
  tri.print1();

 }
 else if(a==3)
 {hex.print2();
 }
 }
 return 0;
}
